1. create a new angular app
2. Doing firebase setup
    Browser
        2.1. create a firebase account 
        2.2. create a project
        2.3. setup authentication mode - Authentication Tab(Sign-in method) - email
        2.4. create security rules - Realtime DB(rules)
        2.5. Add Firebase to your webapp -> copy the firebase object and add it to environment file
    
    Angular project
        2.1. Install firebase SDK.
        2.2. Install AngularFire - a ts library which acts like a bridge btw Angular app --- firebase

3. Creating an Auth Module 
    3.1. It further divides into - login, register, shared
    3.2. Making routes lazy loaded(login, register)
    3.3. creating Auth-form component and its implementation
    3.4. create Auth service 
            1. Creating Methods 
                1. To create user
                2. To login user 
            2. DI service as forRoot into main feature module - to avoid duplicate instance
                1. Invoke as sharedModule.forRoot - in main feature module (Auth Module)
                2. Just do a normal import of sharedModule - in sub feature modules(login, register)
            3. Consuming the service
            4. Redirection / error msg implementation based on response from firebase

4. setting up store 
    4.1. creating the store
    4.2. creating a short path for importing store
    4.3. Invoking the store and setting value
    4.4. selecting value from store 
    
5. Adding Header and Navbar functionality
    5.1. Header 
            1. Display logout btn conditonally
            2. Styling pending
    5.2. Navbar
            1. Display navbar post login  
            2. Styling pending

6. Creating a Health module
    6.1. It further divides into - schedule, meals, workouts
    6.2. Lazy load these sub feature modules 
    6.3. Mapping routes to our navbar
            - with angular material mat-tab -> we couldn't fire routerlink
            - we used another version of mat-tab - refer links section
