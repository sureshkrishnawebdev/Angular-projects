1. Can't bind to 'errorStateMatcher' since it isn't a known property of 'input'.(auth-form-component.html)
    - import MatInputModule.

2. Issue when using store in app.module.ts
    core.js:5980 ERROR NullInjectorError: R3InjectorError(AppModule)[AuthService -> Store -> Store -> Store]: 
    NullInjectorError: No provider for Store!

    Cause: we have used Store class in app.component.ts -> but we haven't declared it as Injectable for DI.

            export class Store { ... }

    Resolution:
        1. Decorate with Injectable and declare it as providein root

            @Injectable({
                providedIn: 'root'
            })
            export class Store { ... }

        2. declare this class directly into providers array of app.module.ts and store being normal class

            export class Store { ... }  

            providers:[   Store   ],
            export class AppModule { }

3. cannot-find-a-differ-supporting-object-object-object. Ngfor-only-supports-binding-to-iterables-such-as-arrays

    Cause:  this problem is because the variable hasn't been assigned yet when angular tries to iterate through it, so it doesn't have a javascript type yet.

             <div class="meals__content"> 
                   <app-w3hTech-list-item
                     *ngFor="let meal of meals"
                      [item]="meal"

    Resolution: when our meals observable of type null. we have this issue. check before iterating - added *ngIf="meals.length"

            <div class="meals__content" *ngIf="meals.length">
                   <app-w3hTech-list-item
                     *ngFor="let meal of meals"
                      [item]="meal"

    links: https://stackoverflow.com/questions/51838181/error-ngfor-only-supports-binding-to-iterables-such-as-arrays
    
4. Type 'unknown' is not assignable to type 'Meal[]'.

     Cause:  When we pass values a type of `any`, * it produces an array of type `unknown[]`.

              getMeal( key: string ){
                    if( !key ){ return  of({}) };
                        return  this.store.select<Meal[]>('meals')
                            .pipe(
                                filter( Boolean ),  **Error**

    Resolution: Typecast the values

            filter<Meal[]>( Boolean ),

    links: https://stackoverflow.com/questions/56485202/argument-of-type-unknown-is-not-assignable-to-parameter-of-type